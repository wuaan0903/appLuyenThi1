/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package exam.view;

import admin.view.ExamForm;
import com.mysql.cj.protocol.x.Notice;
import com.sun.jdi.connect.spi.Connection;
import exam.view.*;
import exam.controller.ExamModify;
import exam.model.Question;
import java.awt.Window;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import java.sql.SQLException;

import javax.swing.SwingUtilities;

/**
 *
 * @author admin
 */
public class editQuestion extends javax.swing.JFrame {

    /**
     * Creates new form addQuestion
     */
    private static final String DATABASE_URL = "jdbc:mysql://localhost:3306/tracnghiem2";
    private static final String USERNAME = "root";
    private static final String PASSWORD = "";
    List<Question> dataList = new ArrayList<>();
    int pos = 0;
    Question q;
    String nameExam1;
    int numberExam1;
    int soCau;

    public editQuestion() {
        initComponents();
        nameExam1 = "TEST";
        numberExam1 = 2;
        soCau = 3;
        for (int i = 0; i < soCau; i++) {
            Question q = new Question();
            q.setStatus(0);
            dataList.add(q);
        }
        loadDataFromDatabase();
        View();

    }

    public editQuestion(String s, int a, int b) {
        initComponents();
        nameExam.setText("Môn học : "+s);
        numberExam.setText("ĐỀ THI SỐ " + a);
        nameExam1 = s;
        numberExam1 = a;
        soCau = b;
        cauHoi.setText("Câu hỏi " + (pos + 1));
        for (int i = 0; i < b; i++) {
            Question q = new Question();
            q.setStatus(0);
            dataList.add(q);
        }
        loadDataFromDatabase();
        View();

    }

    private void loadDataFromDatabase() {
        dataList= ExamModify.getQuestion(nameExam1, numberExam1);

    }

    public void View() {
        if (pos >= 0 && pos < dataList.size()) {
            cauHoi.setText("Câu Hỏi " + (pos + 1));
            nameExam.setText("Môn học : " + nameExam1);
            numberExam.setText("ĐỀ THI SỐ " + numberExam1);

            q = dataList.get(pos);
            this.question.setText(q.getQuestion());
            this.answerA.setText(q.getAnswerA());
            this.answerB.setText(q.getAnswerB());
            this.answerC.setText(q.getAnswerC());
            this.answerD.setText(q.getAnswerD());
            int answerValue = q.getAnswer();
            this.answerCorrect.setText(convertNumberToLetter(answerValue));
        }
    }

    private String convertNumberToLetter(int number) {
        switch (number) {
            case 1:
                return "A";
            case 2:
                return "B";
            case 3:
                return "C";
            case 4:
                return "D";
            default:
                return "";
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        nameExam = new javax.swing.JLabel();
        numberExam = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        question = new javax.swing.JTextPane();
        cauHoi = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        answerA = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        answerB = new javax.swing.JTextField();
        answerD = new javax.swing.JTextField();
        answerC = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        saveBtn = new javax.swing.JButton();
        nextBtn = new javax.swing.JButton();
        backBtn = new javax.swing.JButton();
        backbtn = new javax.swing.JButton();
        answerCorrect = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        nameExam.setFont(new java.awt.Font("Montserrat", 0, 24)); // NOI18N
        nameExam.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        numberExam.setFont(new java.awt.Font("Montserrat", 0, 18)); // NOI18N
        numberExam.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        jScrollPane1.setViewportView(question);

        cauHoi.setFont(new java.awt.Font("Montserrat", 0, 18)); // NOI18N
        cauHoi.setText("Câu hỏi 1 :");

        jLabel4.setFont(new java.awt.Font("Montserrat", 0, 14)); // NOI18N
        jLabel4.setText("Đáp án A :");

        jLabel5.setFont(new java.awt.Font("Montserrat", 0, 14)); // NOI18N
        jLabel5.setText("Đáp án B :");

        jLabel6.setFont(new java.awt.Font("Montserrat", 0, 14)); // NOI18N
        jLabel6.setText("Đáp án D :");

        jLabel7.setFont(new java.awt.Font("Montserrat", 0, 14)); // NOI18N
        jLabel7.setText("Đáp án C :");

        jLabel9.setFont(new java.awt.Font("Montserrat", 0, 14)); // NOI18N
        jLabel9.setText("ĐÚNG :");

        saveBtn.setFont(new java.awt.Font("Montserrat", 0, 12)); // NOI18N
        saveBtn.setText("Lưu");
        saveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveBtnActionPerformed(evt);
            }
        });

        nextBtn.setFont(new java.awt.Font("Montserrat", 0, 12)); // NOI18N
        nextBtn.setText("Câu tiếp");
        nextBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextBtnActionPerformed(evt);
            }
        });

        backBtn.setFont(new java.awt.Font("Montserrat", 0, 12)); // NOI18N
        backBtn.setText("Câu sau");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });

        backbtn.setBackground(new java.awt.Color(204, 255, 204));
        backbtn.setFont(new java.awt.Font("Montserrat", 0, 14)); // NOI18N
        backbtn.setForeground(new java.awt.Color(0, 0, 0));
        backbtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/left-arrow-circle-solid-24.png"))); // NOI18N
        backbtn.setText("Quay lại");
        backbtn.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        backbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backbtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(nameExam, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(numberExam, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(backBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(cauHoi, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 387, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(answerA, javax.swing.GroupLayout.DEFAULT_SIZE, 389, Short.MAX_VALUE)
                            .addComponent(answerB)
                            .addComponent(answerD)
                            .addComponent(answerC)
                            .addComponent(answerCorrect))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                .addComponent(nextBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(saveBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(313, 313, 313))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(backbtn)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(backbtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(nameExam, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(numberExam, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cauHoi, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(answerA, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(answerB, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nextBtn)
                    .addComponent(backBtn))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(answerC, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(answerD, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(answerCorrect, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addComponent(saveBtn)
                .addContainerGap(14, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        if (pos - 1 >= 0) {
            if (!question.getText().isEmpty()
                    && !answerA.getText().isEmpty()
                    && !answerB.getText().isEmpty()
                    && !answerC.getText().isEmpty()
                    && !answerD.getText().isEmpty()
                    && !answerCorrect.getText().isEmpty()) {

                String selectedAnswer = answerCorrect.getText().toUpperCase();

                int answerValue = 0;

                switch (selectedAnswer) {
                    case "A":
                        answerValue = 1;
                        break;
                    case "B":
                        answerValue = 2;
                        break;
                    case "C":
                        answerValue = 3;
                        break;
                    case "D":
                        answerValue = 4;
                        break;
                    default:
                        JOptionPane.showMessageDialog(rootPane, "Giá trị đúng không hợp lệ.");
                        return; // Kết thúc phương thức nếu giá trị không hợp lệ
                }

                Question q = new Question(
                        nameExam1,
                        numberExam1,
                        question.getText(),
                        answerA.getText(),
                        answerB.getText(),
                        answerC.getText(),
                        answerD.getText(),
                        answerValue,
                        1
                );

                dataList.set(pos, q);
            }

            pos--;
            View();
        } else {
            JOptionPane.showMessageDialog(rootPane, "Đã đến câu hỏi đầu tiên, không thể quay lại.");
        }
    }//GEN-LAST:event_backBtnActionPerformed

    private void nextBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextBtnActionPerformed
        if (!this.question.getText().isEmpty()
                && !this.answerA.getText().isEmpty()
                && !this.answerB.getText().isEmpty()
                && !this.answerC.getText().isEmpty()
                && !this.answerD.getText().isEmpty()
                && !this.answerCorrect.getText().isEmpty()) {

            String selectedAnswer = this.answerCorrect.getText().toUpperCase();
            int answerValue;

            switch (selectedAnswer) {
                case "A":
                    answerValue = 1;
                    break;
                case "B":
                    answerValue = 2;
                    break;
                case "C":
                    answerValue = 3;
                    break;
                case "D":
                    answerValue = 4;
                    break;
                default:
                    answerValue = 0; // Giá trị mặc định nếu không phải A, B, C, D
                    break;
            }

            if (answerValue != 0) { // Nếu giá trị hợp lệ
                Question q = new Question(
                        nameExam1,
                        numberExam1,
                        this.question.getText(),
                        this.answerA.getText(),
                        this.answerB.getText(),
                        this.answerC.getText(),
                        this.answerD.getText(),
                        answerValue,
                        1
                );

                dataList.set(pos, q);

                if (pos + 1 < soCau) {
                    pos++;
                    View();
                } else {
                    JOptionPane.showMessageDialog(rootPane, "Không thể chuyển sang câu hỏi tiếp theo. Hãy lưu câu hỏi nếu bạn đã nhập đủ câu hỏi.");
                }
            } else {
                JOptionPane.showMessageDialog(rootPane, "Giá trị đúng không hợp lệ.");
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Không được để trống các ô trên !");
        }
    }//GEN-LAST:event_nextBtnActionPerformed

    private void saveBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveBtnActionPerformed
 
        ExamModify.deleteQưestion(nameExam1, numberExam1);
        for(Question x:dataList)
        {
            ExamModify.insertQuestion(x);
        }
        JOptionPane.showMessageDialog(rootPane, "Cập nhật câu hỏi vào đề thành công !");


    }//GEN-LAST:event_saveBtnActionPerformed

    private void backbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backbtnActionPerformed
        ExamForm ef = new ExamForm();
        ef.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_backbtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(editQuestion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(editQuestion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(editQuestion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(editQuestion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new editQuestion().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField answerA;
    private javax.swing.JTextField answerB;
    private javax.swing.JTextField answerC;
    private javax.swing.JTextField answerCorrect;
    private javax.swing.JTextField answerD;
    private javax.swing.JButton backBtn;
    private javax.swing.JButton backbtn;
    private javax.swing.JLabel cauHoi;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel nameExam;
    private javax.swing.JButton nextBtn;
    private javax.swing.JLabel numberExam;
    private javax.swing.JTextPane question;
    private javax.swing.JButton saveBtn;
    // End of variables declaration//GEN-END:variables
}
